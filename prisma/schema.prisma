generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Transaction {
  id                 String               @id
  transactionCode    String
  amount             Float
  currency           String
  timestamp          String
  status             String?
  paymentType        String?
  installmentsCount  Int?
  merchantCode       String?
  vatAmount          Float?
  tipAmount          Float?
  entryMode          String?
  authCode           String?
  internalId         BigInt?
  productSummary     String?
  payoutsTotal       Int?
  payoutsReceived    Int?
  payoutPlan         String?
  username           String?
  lat                Float?
  lon                Float?
  horizontalAccuracy Float?
  simplePaymentType  String?
  verificationMethod String?
  localTime          String?
  payoutType         String?
  refundedAmount     Float?
  user               String?
  type               String?
  cardType           String?
  simpleStatus       String?
  taxEnabled         Boolean?
  products           Product[]            @relation("TransactionProducts")
  vatRates           VatRate[]
  transactionEvents  TransactionEvent[]
  events             Event[]
  TransactionProduct TransactionProduct[]
}

model Product {
  id                 Int                  @id @default(autoincrement())
  itemId             String?              @unique
  name               String
  price              Float?
  taxRate            Float?
  category           String?
  description        String?
  variants           ProductVariant[]
  transactions       Transaction[]        @relation("TransactionProducts")
  TransactionProduct TransactionProduct[]
}

model ProductVariant {
  id        Int     @id @default(autoincrement())
  variantId String? @unique
  name      String
  price     Float?
  product   Product @relation(fields: [productId], references: [id])
  productId Int
}

model TransactionProduct {
  id             Int         @id @default(autoincrement())
  transaction    Transaction @relation(fields: [transactionId], references: [id])
  transactionId  String
  product        Product?    @relation(fields: [productId], references: [id])
  productId      Int?
  productName    String // Name as on transaction
  productVariant String? // Variant/description as on transaction
  quantity       Float
  price          Float // Price per unit, as paid
  priceWithVat   Float?
  vatAmount      Float?
  vatRate        Float?
  totalPrice     Float?
  totalWithVat   Float?
}

model VatRate {
  id            Int         @id @default(autoincrement())
  transaction   Transaction @relation(fields: [transactionId], references: [id])
  transactionId String
  gross         Float?
  net           Float?
  rate          Float?
  vat           Float?
}

model TransactionEvent {
  id                Int         @id @default(autoincrement())
  transaction       Transaction @relation(fields: [transactionId], references: [id])
  transactionId     String
  sumupEventId      BigInt? // maps to id from SumUp
  eventType         String?
  status            String?
  amount            Float?
  dueDate           String?
  date              String?
  installmentNumber Int?
  timestamp         String?
  feeAmount         Float?
  payoutId          Int?
  payoutReference   String?
}

model Event {
  id                Int         @id @default(autoincrement())
  transaction       Transaction @relation(fields: [transactionId], references: [id])
  transactionId     String
  sumupEventId      BigInt? // maps to id from SumUp
  transaction_id    String? // SumUp event property
  type              String?
  status            String?
  amount            Float?
  timestamp         String?
  feeAmount         Float?
  installmentNumber Int?
  deductedAmount    Float?
  deductedFeeAmount Float?
}
